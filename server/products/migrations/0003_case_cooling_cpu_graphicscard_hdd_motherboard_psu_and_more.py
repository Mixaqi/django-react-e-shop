# Generated by Django 5.0.2 on 2024-08-06 08:19

import django.db.models.deletion
import products.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("products", "0002_product_image"),
    ]

    operations = [
        migrations.CreateModel(
            name="Case",
            fields=[
                (
                    "product_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="products.product",
                    ),
                ),
                ("slots_2dot5_number", models.PositiveIntegerField()),
                ("max_cpu_cooler_length_mm", models.PositiveIntegerField()),
                ("max_gpu_length_mm", models.PositiveBigIntegerField()),
                ("color", models.CharField(max_length=30)),
                ("material", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "cases",
            },
            bases=("products.product",),
        ),
        migrations.CreateModel(
            name="Cooling",
            fields=[
                (
                    "product_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="products.product",
                    ),
                ),
                ("supported_sockets", models.JSONField(blank=True, default=list)),
                ("connector_type_pin", models.PositiveIntegerField()),
                ("fans_number", models.PositiveIntegerField()),
                ("heat_pipe_number", models.PositiveIntegerField()),
                ("Db_max_noise_level", models.FloatField()),
                ("fan_diameter_mm", models.PositiveIntegerField()),
                ("max_power_dissipation_w", models.PositiveIntegerField()),
            ],
            options={
                "db_table": "coolings",
            },
            bases=("products.product",),
        ),
        migrations.CreateModel(
            name="CPU",
            fields=[
                (
                    "product_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="products.product",
                    ),
                ),
                ("clock_frequency_ghz", models.FloatField()),
                ("turbo_clock_frequency_ghz", models.FloatField()),
                ("supported_ram_frequency_mhz", models.PositiveIntegerField()),
                ("is_boxed_version", models.BooleanField()),
                ("socket", models.CharField(max_length=50)),
                ("tdp_watt", models.PositiveIntegerField()),
                ("l3_cache_mb", models.PositiveIntegerField()),
                ("l2_cache_mb", models.PositiveIntegerField()),
                ("number_of_cores", models.PositiveIntegerField()),
                ("number_of_threads", models.PositiveIntegerField()),
                ("techprocess_in_nm", models.PositiveIntegerField()),
            ],
            options={
                "db_table": "processors",
            },
            bases=("products.product",),
        ),
        migrations.CreateModel(
            name="GraphicsCard",
            fields=[
                (
                    "product_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="products.product",
                    ),
                ),
                ("ram_size_gb", models.PositiveIntegerField()),
                ("memory_speed_mhz", models.PositiveIntegerField()),
                ("gpu_clock_speed_mhz", models.PositiveIntegerField()),
                ("card_interface", models.CharField(max_length=20)),
                ("max_screen_resolution", models.CharField(max_length=20)),
                ("required_power_supply", models.PositiveIntegerField()),
            ],
            options={
                "db_table": "graphics_cards",
            },
            bases=("products.product",),
        ),
        migrations.CreateModel(
            name="HDD",
            fields=[
                (
                    "product_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="products.product",
                    ),
                ),
                ("shock_resistance_during_storage_g", models.PositiveIntegerField()),
                ("shock_resistance_during_operation_g", models.PositiveIntegerField()),
                ("rotational_speed_rpm", models.PositiveIntegerField()),
                ("noise_level_db", models.PositiveIntegerField()),
                ("buffer_volume_mb", models.PositiveIntegerField()),
                ("mtbf_hours", models.PositiveIntegerField()),
                ("volume_in_gb", models.PositiveIntegerField()),
                ("form_factor", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "hdds",
            },
            bases=("products.product",),
        ),
        migrations.CreateModel(
            name="Motherboard",
            fields=[
                (
                    "product_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="products.product",
                    ),
                ),
                ("has_liquid_cooling_connector", models.BooleanField()),
                (
                    "processor_manufacturer",
                    models.CharField(choices=[("Intel", "INTEL"), ("AMD", "AMD")]),
                ),
                ("socket", models.CharField(max_length=20)),
                ("chipset", models.CharField(max_length=16)),
                ("is_dual_channel", models.BooleanField()),
                ("is_four_channel", models.BooleanField()),
                ("max_memory_frequency_mhz", models.PositiveIntegerField()),
                ("memory_type", models.CharField(max_length=20)),
                ("max_memory_capacity_gb", models.PositiveIntegerField()),
                ("ram_slots_number", models.PositiveIntegerField()),
            ],
            options={
                "db_table": "motherboards",
            },
            bases=("products.product",),
        ),
        migrations.CreateModel(
            name="PSU",
            fields=[
                (
                    "product_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="products.product",
                    ),
                ),
                ("maximum_current_along_the_plus_12v_line", models.FloatField()),
                ("has_cpu_8_pin", models.BooleanField()),
                ("has_cpu_4_pin", models.BooleanField()),
                ("has_pcie_8_pin", models.BooleanField()),
                ("has_pcie_6_pin", models.BooleanField()),
                ("number_of_separate_12v_lines", models.PositiveIntegerField()),
                ("max_input_voltage_rage", models.PositiveIntegerField()),
                ("min_input_voltage_rage", models.PositiveIntegerField()),
                ("is_modular", models.BooleanField()),
                ("fan_diameter_in_mm", models.PositiveIntegerField()),
                ("power_w", models.PositiveIntegerField()),
            ],
            options={
                "db_table": "psus",
            },
            bases=("products.product",),
        ),
        migrations.CreateModel(
            name="RAM",
            fields=[
                (
                    "product_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="products.product",
                    ),
                ),
                (
                    "ranks_number",
                    models.PositiveIntegerField(
                        choices=[(1, "Single Rank"), (2, "Dual Rank")], null=True
                    ),
                ),
                ("volume_in_gb", models.PositiveIntegerField()),
                ("has_heatsink", models.BooleanField()),
                ("CL", models.PositiveIntegerField()),
                (
                    "modules_number",
                    models.PositiveIntegerField(
                        choices=[(1, "1 Module"), (2, "2 Modules"), (4, "4 Modules")],
                        null=True,
                    ),
                ),
                ("timings", models.CharField(max_length=16)),
                ("clock_frequency_mhz", models.IntegerField()),
            ],
            options={
                "db_table": "rams",
            },
            bases=("products.product",),
        ),
        migrations.CreateModel(
            name="SSD",
            fields=[
                (
                    "product_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="products.product",
                    ),
                ),
                ("has_heatsink", models.BooleanField()),
                ("flash_chip_type", models.CharField(max_length=50)),
                ("sequential_write_speed_mb_in_sec", models.PositiveIntegerField()),
                ("sequential_read_speed_mb_in_sec", models.PositiveIntegerField()),
                ("interface_type", models.CharField(max_length=20)),
                ("is_compatible_with_ps5", models.BooleanField()),
                ("volume_in_gb", models.PositiveIntegerField()),
                ("form_factor", models.CharField(max_length=15)),
            ],
            options={
                "db_table": "ssds",
            },
            bases=("products.product",),
        ),
        migrations.RemoveField(
            model_name="product",
            name="attributes",
        ),
        migrations.AddField(
            model_name="product",
            name="brand",
            field=models.CharField(default="Unknown", max_length=50),
        ),
        migrations.AlterField(
            model_name="product",
            name="image",
            field=models.ImageField(
                blank=True,
                default="Unknown",
                null=True,
                upload_to=products.models.product_image_upload_to,
            ),
        ),
        migrations.AlterField(
            model_name="product",
            name="slug",
            field=models.SlugField(max_length=255, unique=True),
        ),
    ]
